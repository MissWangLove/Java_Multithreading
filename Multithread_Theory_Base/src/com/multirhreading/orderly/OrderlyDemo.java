package com.multirhreading.orderly;

/**
 * 编译优化带来的有序性问题
 * @author  王智
 * @date  2020年3月11日
 */
public class OrderlyDemo {
    /**
     * 编译优化带来的有序性问题的原因是:
 *      高级语言会对某一些操作进行一些重排序优化, 比如说 new 创建对象, 我们认为的是:
     *      new 一块内存
     *      在内存上创建对象
     *      将对象所在内存地址进行返回
     *  实际的优化后的顺序确是:
     *      new 一块内存
     *      返回内存地址
     *      在内存上创建对象
     *  如果多个线程同时调用一个方法来创建一个单例对象的话, 在第二步进行了线程切换, 那就会导致这个单例对象创建失败,
     *  可能会出现空指针
     */
}
